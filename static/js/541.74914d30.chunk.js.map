{"version":3,"file":"static/js/541.74914d30.chunk.js","mappings":"sSAEMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBN,EAAIO,IAAI,uBAF5B,UAGqB,OADlBC,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBf,EAAIO,IAAI,gBAAiB,CAC9CJ,OAAQY,IAHP,UAKqB,OAHlBP,EAFH,QAKUC,OALV,sBAMK,IAAIC,MAAMF,EAASC,QANxB,gCAQID,EAASG,MARb,sCAUHC,QAAQC,MAAR,MAVG,qFAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,IAFtC,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,EAAlB,aAFpB,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,EAAlB,aAFpB,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qF,yGChBP,UAzCa,WACX,IAAQI,GAAaG,EAAAA,EAAAA,MAAbH,SACR,GAA6BI,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BN,EAAAA,EAAAA,IAAeD,GAF3C,OAEUQ,EAFV,OAGIF,EAAaE,EAAUH,MAH3B,gDAKIV,QAAQC,MAAR,MALJ,sGADc,uBAAC,WAAD,wBAWda,EACD,GAAE,CAACT,KAEF,wBACGK,EAAKK,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IACED,EAAME,aAAN,0CACuCF,EAAME,cA1B3D,4HA6BYC,IAAKH,EAAMI,KACXC,MAAO,IACPC,OAAQ,OAEV,uBAAIN,EAAMI,QACV,uCAAeJ,EAAMO,eAZdP,EAAMQ,GAelB,KAGN,C","sources":["Api.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '31e4aa16d394f964079920d6173ce10a',\n    language: 'en-US',\n  },\n});\n\nexport async function fetchTopMovies() {\n  try {\n    const response = await API.get('/trending/movie/day');\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchQueryMovies(queryParams) {\n  try {\n    const response = await API.get('/search/movie', {\n      params: queryParams,\n    });\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchMovie(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieCast(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}/credits`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\nexport async function fetchMovieReviews(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}/reviews`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","import { fetchMovieCast } from 'Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst defaultImg =\n  'https://png.pngtree.com/png-vector/20191002/ourmid/pngtree-comedy-and-tragedy-theatrical-masks-icon-png-image_1783971.jpg';\nconst Cast = () => {\n  const { movie_id } = useParams();\n  const [cast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const movieCast = await fetchMovieCast(movie_id);\n        setMovieCast(movieCast.cast);\n      } catch (error) {\n        console.error(error);\n      } finally {\n      }\n    }\n\n    getMovieCast();\n  }, [movie_id]);\n  return (\n    <ul>\n      {cast.map(actor => {\n        return (\n          <li key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w185/${actor.profile_path}`\n                  : defaultImg\n              }\n              alt={actor.name}\n              width={185}\n              height={278}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["API","axios","baseURL","params","api_key","language","fetchTopMovies","get","response","status","Error","data","console","error","fetchQueryMovies","queryParams","fetchMovie","movie_id","fetchMovieCast","fetchMovieReviews","useParams","useState","cast","setMovieCast","useEffect","movieCast","getMovieCast","map","actor","src","profile_path","alt","name","width","height","character","id"],"sourceRoot":""}