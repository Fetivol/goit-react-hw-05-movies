{"version":3,"file":"static/js/266.fe0ce9ea.chunk.js","mappings":"sSAEMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBN,EAAIO,IAAI,uBAF5B,UAGqB,OADlBC,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBf,EAAIO,IAAI,gBAAiB,CAC9CJ,OAAQY,IAHP,UAKqB,OAHlBP,EAFH,QAKUC,OALV,sBAMK,IAAIC,MAAMF,EAASC,QANxB,gCAQID,EAASG,MARb,sCAUHC,QAAQC,MAAR,MAVG,qFAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,IAFtC,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,EAAlB,aAFpB,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,EAAlB,aAFpB,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qF,oFC7DMO,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EAMZ,KAGN,C,yGCUD,UAtBa,WACX,OAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEgC3B,EAAAA,EAAAA,MAFhC,OAEU4B,EAFV,OAGIF,EAAaE,EAAcC,SAH/B,gDAKIvB,QAAQC,MAAR,MALJ,sGADc,uBAAC,WAAD,wBAUduB,EACD,GAAE,KAED,6CAEE,SAAC,IAAD,CAAYf,OAAQU,MAGzB,C","sources":["Api.js","components/MoviesList/MoviesList.js","pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '31e4aa16d394f964079920d6173ce10a',\n    language: 'en-US',\n  },\n});\n\nexport async function fetchTopMovies() {\n  try {\n    const response = await API.get('/trending/movie/day');\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchQueryMovies(queryParams) {\n  try {\n    const response = await API.get('/search/movie', {\n      params: queryParams,\n    });\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchMovie(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieCast(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}/credits`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\nexport async function fetchMovieReviews(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}/reviews`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { fetchTopMovies } from 'Api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [topMovies, setTopMovies] = useState([]);\n  useEffect(() => {\n    async function getTopMovies() {\n      try {\n        const topMoviesList = await fetchTopMovies();\n        setTopMovies(topMoviesList.results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n      }\n    }\n    getTopMovies();\n  }, []);\n  return (\n    <div>\n      Trending Today\n      <MoviesList movies={topMovies} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["API","axios","baseURL","params","api_key","language","fetchTopMovies","get","response","status","Error","data","console","error","fetchQueryMovies","queryParams","fetchMovie","movie_id","fetchMovieCast","fetchMovieReviews","MoviesList","movies","location","useLocation","map","id","title","to","state","from","useState","topMovies","setTopMovies","useEffect","topMoviesList","results","getTopMovies"],"sourceRoot":""}