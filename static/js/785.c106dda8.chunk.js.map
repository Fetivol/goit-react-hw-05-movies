{"version":3,"file":"static/js/785.c106dda8.chunk.js","mappings":"sSAEMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBN,EAAIO,IAAI,uBAF5B,UAGqB,OADlBC,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBf,EAAIO,IAAI,gBAAiB,CAC9CJ,OAAQY,IAHP,UAKqB,OAHlBP,EAFH,QAKUC,OALV,sBAMK,IAAIC,MAAMF,EAASC,QANxB,gCAQID,EAASG,MARb,sCAUHC,QAAQC,MAAR,MAVG,qFAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,IAFtC,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,EAAlB,aAFpB,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qFAYA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,gGAEoBjB,EAAIO,IAAJ,iBAAkBU,EAAlB,aAFpB,UAGqB,OADlBT,EAFH,QAGUC,OAHV,sBAIK,IAAIC,MAAMF,EAASC,QAJxB,gCAMID,EAASG,MANb,sCAQHC,QAAQC,MAAR,MARG,qF,yGCtBP,UArCgB,WACd,IAAQI,GAAaG,EAAAA,EAAAA,MAAbH,SACR,GAAmCI,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,8GAE4BL,EAAAA,EAAAA,IAAkBF,GAF9C,OAEUQ,EAFV,OAGIF,EAAgBE,EAAUC,SAH9B,gDAKId,QAAQC,MAAR,MALJ,sGAJc,sBACTI,GADS,mCAcdU,EACD,GAAE,CAACV,IAEGK,EAAQM,OAAS,GACtB,wBACGN,EAAQO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EAKZ,OAGH,oEAEH,C","sources":["Api.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '31e4aa16d394f964079920d6173ce10a',\n    language: 'en-US',\n  },\n});\n\nexport async function fetchTopMovies() {\n  try {\n    const response = await API.get('/trending/movie/day');\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchQueryMovies(queryParams) {\n  try {\n    const response = await API.get('/search/movie', {\n      params: queryParams,\n    });\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchMovie(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieCast(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}/credits`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\nexport async function fetchMovieReviews(movie_id) {\n  try {\n    const response = await API.get(`/movie/${movie_id}/reviews`);\n    if (response.status !== 200) {\n      throw new Error(response.status);\n    }\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n","import { fetchMovieReviews } from 'Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movie_id } = useParams();\n  const [reviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movie_id) {\n      return;\n    }\n    async function getMovieReviews() {\n      try {\n        const movieCast = await fetchMovieReviews(movie_id);\n        setMovieReviews(movieCast.results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n      }\n    }\n\n    getMovieReviews();\n  }, [movie_id]);\n\n  return reviews.length > 0 ? (\n    <ul>\n      {reviews.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  ) : (\n    <p>We don't have any reviews for this movie.</p>\n  );\n};\n\nexport default Reviews;\n"],"names":["API","axios","baseURL","params","api_key","language","fetchTopMovies","get","response","status","Error","data","console","error","fetchQueryMovies","queryParams","fetchMovie","movie_id","fetchMovieCast","fetchMovieReviews","useParams","useState","reviews","setMovieReviews","useEffect","movieCast","results","getMovieReviews","length","map","author","content","id"],"sourceRoot":""}